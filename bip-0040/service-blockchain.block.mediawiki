=Service: Blockchain Block=

This service provides methods to get information about blocks.

* Service type: <code>blockchain.block</code>
* Service vendor: <code>Electrum</code>

==Method: Get Chunk==

* Method name: <code>get_chunk</code>
* Introduced in: <code>0.3</code>
* Deprecated in: <code>1.2</code>
* Removed in: <code>1.4</code>

{|
! <ins>[Request]</ins>
! Type
! Example
! Description
|-
! Method
| colspan="3" | <code>blockchain.block.get_chunk</code>
|-
! Params [0]
| <code>int</code>
| <code>4</code>
| The zero-based chunk index.
|-
! <ins>[Response]</ins>
! Type
! Example
! Description
|-
! Result
| <code>string</code>
| <code>AABBCCDDEEFF</code>
| The hexadecimal representation of concatenated block headers. In case of Bitcoin, each block header is 80 bytes and each chunk is 2016 block headers.
|}

==Method: Get Header==

* Method name: <code>get_header</code>
* Introduced in: <code>0.2</code>
* Deprecated in: <code>1.3</code>
* Removed in: <code>1.4</code>

{|
! <ins>[Request]</ins>
! Type
! Example
! Description
|-
! Method
| colspan="3" | <code>blockchain.block.get_header</code>
|-
! Params [0]
| <code>int</code>
| <code>2345344</code>
| The block height.
|-
! <ins>[Response]</ins>
! Type
! Example
! Description
|-
! Result
| <code>object</code>
| <code>{ "bits": 392292856, "block_height": 510000, "merkle_root": "297cfcc6a66e063692b20650d21cc0ac7a2a80f7277ebd7c5d6c7010a070d25c", "nonce": 3347656422, "prev_block_hash": "0000000000000000002292de0d9f03dfa15a04dbf09102d5d4552117b717fa86", "timestamp": 1519083654, "version": 536870912 }</code>
| The deserialized header.
|-
! Result ["bits"]
| <code>int</code>
| <code>392292856</code>
| The block bits.
|-
! Result ["block_height"]
| <code>int</code>
| <code>510000</code>
| The height of the block.
|-
! Result ["merkle_root"]
| <code>string</code>
| <code>297cfcc6a66e063692b20650d21cc0ac7a2a80f7277ebd7c5d6c7010a070d25c</code>
| The hexadecimal representation of the merkle root of the block.
|-
! Result ["nonce"]
| <code>int</code>
| <code>3347656422</code>
| The nonce of the block.
|-
! Result ["prev_block_hash"]
| <code>string</code>
| <code>0000000000000000002292de0d9f03dfa15a04dbf09102d5d4552117b717fa86</code>
| The hexadecimal representation of the hash of the previous block.
|-
! Result ["timestamp"]
| <code>int</code>
| <code>1519083654</code>
| The timestamp the block was created.
|-
! Result ["version"]
| <code>int</code>
| <code>536870912</code>
| The version of the block.
|}

==Method: Header==

* Method name: <code>header</code>
* Introduced in: <code>1.3</code>

{|
! <ins>[Request]</ins>
! Type
! Example
! Description
|-
! Method
| colspan="3" | <code>blockchain.block.header</code>
|-
! Params [0]
| <code>int</code>
| <code>2345344</code>
| The start block height.
|-
! Params [1]
| <code>int</code>
| <code>0</code> or <code>2345354</code>
| The checkpoint block height. Ignored if <code>0</code> or absent. Introduced in: <code>1.4</code>
|-
! <ins>[Response]</ins>
! Type
! Example
! Description
|-
! Result
| <code>string</code> or <code>object</code>
| <code>0100000000000000000000000000000000000000000000000000000000000000000000003ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4a29ab5f49ffff001d1dac2b7c010000006fe28c0ab6f1b372c1a6a246ae63f74f931e8365e15a089c68d6190000000000982051fd1e4ba744bbbe680e1fee14677ba1a3c3540bf7b1cdb606e857233e0e61bc6649ffff001d01e36299</code> or <code>{ "branch": [ "000000004ebadb55ee9096c9a2f8880e09da59c0d68b1c228da88e48844a1485", "96cbbc84783888e4cc971ae8acf86dd3c1a419370336bb3c634c97695a8c5ac9", "965ac94082cebbcffe458075651e9cc33ce703ab0115c72d9e8b1a9906b2b636", "89e5daa6950b895190716dd26054432b564ccdc2868188ba1da76de8e1dc7591" ], "header": "0100000085144a84488ea88d221c8bd6c059da090e88f8a2c99690ee55dbba4e00000000e11c48fecdd9e72510ca84f023370c9a38bf91ac5cae88019bee94d24528526344c36649ffff001d1d03e477", "root": "e347b1c43fd9b5415bf0d92708db8284b78daf4d0e24f9c3405f45feb85e25db" }</code>
| Information about the header. It returns an object if <code>cp_height</code> is non-zero.
|-
! Result ["header"] (if <code>cp_height</code> is non-zero)
| <code>string</code>
| <code>0100000000000000000000000000000000000000000000000000000000000000000000003ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4a29ab5f49ffff001d1dac2b7c010000006fe28c0ab6f1b372c1a6a246ae63f74f931e8365e15a089c68d6190000000000982051fd1e4ba744bbbe680e1fee14677ba1a3c3540bf7b1cdb606e857233e0e61bc6649ffff001d01e36299</code>
| The hexadecimal representation of the binary block header. Since version <code>1.4.1</code>, the AuxPoW data is truncated (if present in the header).
|-
! Result ["root"] (if <code>cp_height</code> is non-zero)
| <code>string</code>
| <code>e347b1c43fd9b5415bf0d92708db8284b78daf4d0e24f9c3405f45feb85e25db</code>
| The merkle root of all headers up to <code>cp_height</code>.
|-
! Result ["branch"] (if <code>cp_height</code> is non-zero)
| <code>array</code>
| <code>[ "000000004ebadb55ee9096c9a2f8880e09da59c0d68b1c228da88e48844a1485","96cbbc84783888e4cc971ae8acf86dd3c1a419370336bb3c634c97695a8c5ac9"]</code>
| The merkle branch the last returned header up to <code>root</code>; deepest pairing first.
|}

==Method: Headers==

* Method name: <code>headers</code>
* Introduced in: <code>1.2</code>

{|
! <ins>[Request]</ins>
! Type
! Example
! Description
|-
! Method
| colspan="3" | <code>blockchain.block.headers</code>
|-
! Params [0]
| <code>int</code>
| <code>2345344</code>
| The start block height.
|-
! Params [1]
| <code>int</code>
| <code>20</code>
| Te amount of headers to be returned.
|-
! Params [2]
| <code>int</code>
| <code>0</code> or <code>2345354</code>
| The checkpoint block height. Ignored if <code>0</code> or absent. Introduced in: <code>1.4</code>
|-
! <ins>[Response]</ins>
! Type
! Example
! Description
|-
! Result
| <code>object</code>
| <code>{ "count": 2, "hex": "0100000000000000000000000000000000000000000000000000000000000000000000003ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4a29ab5f49ffff001d1dac2b7c010000006fe28c0ab6f1b372c1a6a246ae63f74f931e8365e15a089c68d6190000000000982051fd1e4ba744bbbe680e1fee14677ba1a3c3540bf7b1cdb606e857233e0e61bc6649ffff001d01e36299", "max": 2016, "root":"AABBCC", "branch":"DDEEFF" }</code>
| Information about multiple headers.
|-
! Result ["count"]
| <code>int</code>
| <code>2</code>
| The amount of returned headers.
|-
! Result ["hex"]
| <code>string</code>
| <code>0100000000000000000000000000000000000000000000000000000000000000000000003ba3edfd7a7b12b27ac72c3e67768f617fc81bc3888a51323a9fb8aa4b1e5e4a29ab5f49ffff001d1dac2b7c010000006fe28c0ab6f1b372c1a6a246ae63f74f931e8365e15a089c68d6190000000000982051fd1e4ba744bbbe680e1fee14677ba1a3c3540bf7b1cdb606e857233e0e61bc6649ffff001d01e36299</code>
| The hexadecimal representation of the concatenated binary block headers. Since version <code>1.4.1</code>, the AuxPoW data is truncated (if present in the header), if <code>cp_height</code> is non-zero.
|-
! Result ["max"]
| <code>int</code>
| <code>2016</code>
| The maximum amount of headers this method will return.
|-
! Result ["root"]
| <code>string</code>
| <code>e347b1c43fd9b5415bf0d92708db8284b78daf4d0e24f9c3405f45feb85e25db</code>
| The merkle root of all headers up to <code>cp_height</code>. Present if <code>cp_height</code> is non-zero.
|-
! Result ["branch"]
| <code>array</code>
| <code>[ "000000004ebadb55ee9096c9a2f8880e09da59c0d68b1c228da88e48844a1485","96cbbc84783888e4cc971ae8acf86dd3c1a419370336bb3c634c97695a8c5ac9"]</code>
| The merkle branch the last returned header up to <code>root</code>; deepest pairing first. Present if <code>cp_height</code> is non-zero.
|}

==Method: Subscribe==

* Method name: <code>subscribe</code>
* Introduced in: Stratum Reference Implementation (never implemented in Electrum)

{|
! <ins>[Request]</ins>
! Type
! Example
! Description
|-
! Method
| colspan="3" | <code>blockchain.block.subscribe</code>
|-
! <ins>[Response]</ins>
! Type
! Example
! Description
|-
! Result
| Unknown
|
| UNKNOWN
|}

==Method: Unsubscribe==

* Method name: <code>unsubscribe</code>
* Introduced in: Stratum Reference Implementation (never implemented in Electrum)

{|
! <ins>[Request]</ins>
! Type
! Example
! Description
|-
! Method
| colspan="3" | <code>blockchain.block.unsubscribe</code>
|-
! <ins>[Response]</ins>
! Type
! Example
! Description
|-
! Result
| Unknown
|
| UNKNOWN
|}

==Method: Get Block Number==

* Method name: <code>get_blocknum</code>
* Introduced in: Stratum Reference Implementation (never implemented in Electrum)

{|
! <ins>[Request]</ins>
! Type
! Example
! Description
|-
! Method
| colspan="3" | <code>blockchain.block.get_blocknum</code>
|-
! <ins>[Response]</ins>
! Type
! Example
! Description
|-
! Result
| <code>int</code>
| <code>2345344</code>
| The block number (block height).
|}