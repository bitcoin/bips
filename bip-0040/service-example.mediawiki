=Service: Example=

This service is an example service. It doesn't have any other purpose than testing.

* Service type: <code>example</code>
* Service vendor: <code>Stratum</code>

==Method: Hello World==

Ask the server to send a "Hello world!" back.

* Method name: <code>hello_world</code>

{|
! <ins>[Request]</ins>
! Type
! Example
! Description
|-
! Method
| colspan="3" | <code>example.hello_world</code>
|-
! <ins>[Response]</ins>
! Type
! Example
! Description
|-
! Result
| <code>string</code>
| <code>Hello world!</code>
| The "Hello world" text.
|}

==Method: Ping==

Ping the server and get a pong back with the same text.

* Method name: <code>ping</code>

{|
! <ins>[Request]</ins>
! Type
! Example
! Description
|-
! Method
| colspan="3" | <code>example.ping</code>
|-
! Params [0] (<code>payload</code>)
| <code>mixed</code>
| <code>12345678</code>
| The ping payload.
|-
! <ins>[Response]</ins>
! Type
! Example
! Description
|-
! Result
| <code>mixed</code>
| <code>12345678</code>
| The pong payload, same as the ping payload.
|}

==Method: Synchronous==

Ask the server to run a synchronous command for a specific amount of seconds.

* Method name: <code>synchronous</code>

{|
! <ins>[Request]</ins>
! Type
! Example
! Description
|-
! Method
| colspan="3" | <code>example.synchronous</code>
|-
! Params [0] (<code>how_long</code>)
| <code>int</code> (or a <code>string</code> or a <code>float</code> that can be casted to an <code>int</code>)
| <code>123</code>
| The time to run.
|-
! <ins>[Response]</ins>
! Type
! Example
! Description
|-
! Result
| <code>string</code>
| <code>Request finished in 123 seconds</code>
| A string that tells that the command has finished running.
|}

==Method: Throw Exception==

Ask the server to throw an exception.

* Method name: <code>throw_exception</code>

{|
! <ins>[Request]</ins>
! Type
! Example
! Description
|-
! Method
| colspan="3" | <code>example.throw_exception</code>
|-
! <ins>[Response]</ins>
! Type
! Example
! Description
|-
! Error
| <code>object</code>
| <code>{"code":-1,"data":"Some traceback","message":"Some error"}</code>
| The error object.
|}

==Method: Throw Signed Exception==

Ask the server to throw an exception in a signed JSON-RPC object.

* Method name: <code>throw_signed_exception</code>

{|
! <ins>[Request]</ins>
! Type
! Example
! Description
|-
! Method
| colspan="3" | <code>example.throw_signed_exception</code>
|-
! <ins>[Response]</ins>
! Type
! Example
! Description
|-
! Error
| <code>object</code>
| <code>{"code":-1,"data":"Some traceback","message":"Some error"}</code>
| The error object.
|}